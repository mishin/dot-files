
function pm {
    case $1 in
        'install')
            shift 1
            cpanm "$@"
            ;;
        'uninstall')
            shift 1
            pm-uninstall "$@"
            ;;
        'outdated')
            shift 1
            cpan-outdated "$@"
            ;;
        'upgrade')
            shift 1
            cpan-outdated -p | cpanm "$@"
            ;;
        'version')
            shift 1
            while [ "$1" != "" ] ; do
                perl -M$1 -le "print qq{$1 \$$1::VERSION}"
                shift 1
            done
            ;;
        'changes')
            shift 1
            cpan-listchanges "$@"
            ;;
        *)
            cat << EOM
Usage:
    pm install AnyEvent Task::Kensho::Async
    pm uninstall Task::Kensho::Async
    pm outdated
    pm upgrade
    pm version AnyEvent
    pm changes URI
EOM
            ;;
    esac
}

function migrate {
    if [ $# -ne 1 ]; then
        cat << EOM
Usage:
    migrate [perl-version]
    migrate perl-5.14.1
EOM

    else
        echo "@@@@@ Start migration to $1"; sleep 1;

        echo "@@@@@ Installing ExtUtils::Installed"; sleep 1;
        cpanm ExtUtils::Installed;

        echo "@@@@@ Extracting all modules"; sleep 1;
        rm /tmp/modules.list;
        perl -MExtUtils::Installed -E 'say for ExtUtils::Installed->new->modules' > /tmp/modules.list;

        echo "@@@@@ Upgrading perlbrew"; sleep 1;
        curl -L http://xrl.us/perlbrewinstall | bash;
        source ~/perl5/perlbrew/etc/bashrc;

        echo "@@@@@ Installing $1"; sleep 1;
        perlbrew install "$1" -v &&

        echo "@@@@@ Switching new environment"; sleep 1;
        perlbrew switch "$1";

        echo "@@@@@ Installing cpanminus for new environment"; sleep 1;
        perlbrew install-cpanm;

        echo "@@@@@ Installing all modules into new environment"; sleep 1;
        cpanm < /tmp/modules.list;

        echo "@@@@@ Re-running cpanminus to check everything is OK"; sleep 1;
        cpanm < /tmp/modules.list;

        echo "@@@@@ Done migration!"
        perl -V;
    fi
}

